--[[
    Faldes_X UI Module
    Develover: Arts
    Version: 1.2.0
    Date: 14/9/25
]]

local Faldes_X = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local function LoadWina()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/Artss1/Faldes_X/refs/heads/main/LoadWindow"))()
end

wait(1)

LoadWina()

-- Theme system
local themes = {
    Default = {
        WindowBg = Color3.fromRGB(0, 0, 0),
        TabBg = Color3.fromRGB(212, 212, 212),
        TabWindowBg = Color3.fromRGB(136, 136, 136),
        ButtonBg = Color3.fromRGB(255, 255, 255),
        ToggleBg = Color3.fromRGB(115, 115, 115),
        MainTextBg = Color3.fromRGB(58, 58, 58),
    },
    Dark = {
        WindowBg = Color3.fromRGB(30, 30, 30),
        TabBg = Color3.fromRGB(60, 60, 60),
        TabWindowBg = Color3.fromRGB(40, 40, 40),
        ButtonBg = Color3.fromRGB(80, 80, 80),
        ToggleBg = Color3.fromRGB(60, 60, 60),
        MainTextBg = Color3.fromRGB(20, 20, 20),
    },
    Light = {
        WindowBg = Color3.fromRGB(220, 220, 220),
        TabBg = Color3.fromRGB(255, 255, 255),
        TabWindowBg = Color3.fromRGB(240, 240, 240),
        ButtonBg = Color3.fromRGB(255, 255, 255),
        ToggleBg = Color3.fromRGB(200, 200, 200),
        MainTextBg = Color3.fromRGB(230, 230, 230),
    }
}
local currentTheme = themes.Default

local function applyTheme(windowObj, theme)
    windowObj.Window.BackgroundColor3 = theme.WindowBg
    windowObj.TabFrame.BackgroundColor3 = theme.TabWindowBg
    windowObj.MainText.BackgroundColor3 = theme.MainTextBg
    for i = 1, #windowObj.Tabs do
        windowObj.Tabs[i].BackgroundColor3 = theme.TabBg
    end
    for i = 1, #windowObj.TabWindows do
        windowObj.TabWindows[i].BackgroundColor3 = theme.TabWindowBg
        for k, v in windowObj.TabWindows[i]:GetChildren() do
            if v:IsA("TextButton") then
                v.BackgroundColor3 = theme.ButtonBg
            elseif v:IsA("Frame") then
                v.BackgroundColor3 = theme.ToggleBg
            end
        end
    end
end

-- Helper: Find next Y position for tab/button/slider etc.
local function getNextY(parent, height, padding)
    local maxY = 0
    for k, v in parent:GetChildren() do
        if v:IsA("GuiObject") then
            local y = v.Position.Y.Offset + v.Size.Y.Offset
            if y > maxY then maxY = y end
        end
    end
    return UDim2.new(0, 0, 0, maxY + (padding or 5))
end

local function animateButton(button)
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(200, 200, 255), Size = button.Size + UDim2.new(0, 10, 0, 5)}):Play()
    end)
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = currentTheme.ButtonBg, Size = UDim2.new(0, 200, 0, 37)}):Play()
    end)
end

local function animateToggle(toggleButton)
    toggleButton.MouseEnter:Connect(function()
        TweenService:Create(toggleButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(180, 255, 180)}):Play()
    end)
    toggleButton.MouseLeave:Connect(function()
        TweenService:Create(toggleButton, TweenInfo.new(0.2), {BackgroundColor3 = currentTheme.ToggleBg}):Play()
    end)
end

local function animateSlider(knob)
    knob.MouseEnter:Connect(function()
        TweenService:Create(knob, TweenInfo.new(0.2), {BackgroundTransparency = 0.5, Size = UDim2.new(0, 38, 0, 38)}):Play()
    end)
    knob.MouseLeave:Connect(function()
        TweenService:Create(knob, TweenInfo.new(0.2), {BackgroundTransparency = 1, Size = UDim2.new(0, 33, 0, 33)}):Play()
    end)
end

function Faldes_X.CreateWindow(params)
    params = params or {}
    local PlayerGui = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    local gui = Instance.new("ScreenGui")
    gui.Name = params.Name or "Faldes_X"
    gui.Parent = PlayerGui
    gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    local window = Instance.new("Frame")
    window.Name = "Window"
    window.Parent = gui
    window.BackgroundColor3 = currentTheme.WindowBg
    window.BackgroundTransparency = 0.7
    window.BorderSizePixel = 0
    window.Position = params.Position or UDim2.new(0.156, 0, 0.15, 0)
    window.Size = params.Size or UDim2.new(0, 790, 0, 394)

    local mainText = Instance.new("TextLabel")
    mainText.Name = "MainText"
    mainText.Parent = window
    mainText.BackgroundColor3 = currentTheme.MainTextBg
    mainText.Position = UDim2.new(0, 0, -0.084, 0)
    mainText.Size = UDim2.new(0, 790, 0, 41)
    mainText.Font = Enum.Font.SourceSansBold
    mainText.Text = params.Title or "Faldes_X by arts"
    mainText.TextColor3 = Color3.fromRGB(0, 0, 0)
    mainText.TextSize = 30
    mainText.TextXAlignment = Enum.TextXAlignment.Left

    local exit = Instance.new("TextButton")
    exit.Name = "Exit"
    exit.Parent = mainText
    exit.BackgroundColor3 = Color3.fromRGB(138, 133, 130)
    exit.Position = UDim2.new(0.947, 0, 0.07, 0)
    exit.Size = UDim2.new(0, 37, 0, 35)
    exit.Font = Enum.Font.SourceSansBold
    exit.Text = "X"
    exit.TextColor3 = Color3.fromRGB(206, 0, 3)
    exit.TextSize = 25
    exit.MouseButton1Click:Connect(function()
        window.Visible = false
    end)

    local tabFrame = Instance.new("ScrollingFrame")
    tabFrame.Name = "TabFrame"
    tabFrame.Parent = window
    tabFrame.Active = true
    tabFrame.BackgroundColor3 = currentTheme.TabWindowBg
    tabFrame.Position = UDim2.new(0.008, 0, 0.038, 0)
    tabFrame.Size = UDim2.new(0, 111, 0, 373)
    tabFrame.CanvasSize = UDim2.new(0, 0, 0, 0)

    -- TabWindows for each tab
    local tabWindows = {}
    local Tabs = {}

    return {
        Gui = gui,
        Window = window,
        MainText = mainText,
        TabFrame = tabFrame,
        TabWindows = tabWindows,
        Tabs = Tabs,
        _theme = currentTheme,
    }
end

function Faldes_X.CreateTab(windowObj, params)
    params = params or {}
    local tabFrame = windowObj.TabFrame
    local tab = Instance.new("TextButton")
    tab.Name = params.Name or "Tab"
    tab.Parent = tabFrame
    tab.BackgroundColor3 = currentTheme.TabBg
    tab.Position = getNextY(tabFrame, 30, 5)
    tab.Size = UDim2.new(0, 103, 0, 30)
    tab.Font = Enum.Font.SourceSansBold
    tab.Text = params.Text or "Tab"
    tab.TextColor3 = Color3.fromRGB(0, 0, 0)
    tab.TextSize = 25

    tabFrame.CanvasSize = UDim2.new(0, 0, 0, tab.Position.Y.Offset + tab.Size.Y.Offset + 10)
    windowObj.Tabs[#windowObj.Tabs + 1] = tab

    -- Create TabWindow for this tab
    local tabWindow = Instance.new("ScrollingFrame")
    tabWindow.Name = tab.Name .. "_TabWindow"
    tabWindow.Parent = windowObj.Window
    tabWindow.Active = true
    tabWindow.BackgroundColor3 = currentTheme.TabWindowBg
    tabWindow.Position = UDim2.new(0.165, 0, 0.038, 0)
    tabWindow.Size = UDim2.new(0, 650, 0, 373)
    tabWindow.CanvasSize = UDim2.new(0, 0, 0, 0)
    tabWindow.Visible = #windowObj.Tabs == 1 -- Only first tab visible by default
    windowObj.TabWindows[#windowObj.TabWindows + 1] = tabWindow

    tab.MouseButton1Click:Connect(function()
        -- Hide all TabWindows except this one
        for i = 1, #windowObj.TabWindows do
            windowObj.TabWindows[i].Visible = (windowObj.TabWindows[i] == tabWindow)
        end
    end)

    animateButton(tab)
    return tab, tabWindow
end

function Faldes_X.CreateButton(tabWindow, params)
    params = params or {}
    local button = Instance.new("TextButton")
    button.Name = params.Name or "Button"
    button.Parent = tabWindow
    button.BackgroundColor3 = currentTheme.ButtonBg
    button.Position = getNextY(tabWindow, 37, 5)
    button.Size = UDim2.new(0, 200, 0, 37)
    button.Font = Enum.Font.SourceSans
    button.Text = params.Text or "Button"
    button.TextColor3 = Color3.fromRGB(0, 0, 0)
    button.TextSize = 14

    if params.OnClick then
        button.MouseButton1Click:Connect(params.OnClick)
    end

    animateButton(button)
    tabWindow.CanvasSize = UDim2.new(0, 0, 0, button.Position.Y.Offset + button.Size.Y.Offset + 10)
    return button
end

function Faldes_X.CreateToggle(tabWindow, params)
    params = params or {}
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Name = params.Name or "Toggle"
    toggleFrame.Parent = tabWindow
    toggleFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    toggleFrame.Position = getNextY(tabWindow, 39, 5)
    toggleFrame.Size = UDim2.new(0, 246, 0, 39)

    local toggleButton = Instance.new("TextButton")
    toggleButton.Parent = toggleFrame
    toggleButton.BackgroundColor3 = currentTheme.ToggleBg
    toggleButton.Position = UDim2.new(0.83, 0, 0, 0)
    toggleButton.Size = UDim2.new(0, 44, 0, 39)
    toggleButton.Text = ""
    toggleButton.TextColor3 = Color3.fromRGB(0, 0, 0)
    toggleButton.TextSize = 14

    local nameLabel = Instance.new("TextLabel")
    nameLabel.Name = "Name"
    nameLabel.Parent = toggleFrame
    nameLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    nameLabel.Size = UDim2.new(0, 204, 0, 38)
    nameLabel.Font = Enum.Font.SourceSans
    nameLabel.Text = params.Text or "Toggler"
    nameLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
    nameLabel.TextSize = 14

    local state = false
    toggleButton.MouseButton1Click:Connect(function()
        state = not state
        if params.OnToggle then
            params.OnToggle(state)
        end
        toggleButton.BackgroundColor3 = state and BrickColor.Green().Color or currentTheme.ToggleBg
    end)

    animateToggle(toggleButton)
    tabWindow.CanvasSize = UDim2.new(0, 0, 0, toggleFrame.Position.Y.Offset + toggleFrame.Size.Y.Offset + 10)
    return toggleFrame
end

function Faldes_X.CreateSlider(tabWindow, params)
    params = params or {}
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Name = params.Name or "Slider"
    sliderFrame.Parent = tabWindow
    sliderFrame.BackgroundColor3 = Color3.fromRGB(103, 103, 103)
    sliderFrame.Position = getNextY(tabWindow, 47, 5)
    sliderFrame.Size = UDim2.new(0, 284, 0, 47)

    local bar = Instance.new("Frame")
    bar.Name = "Bar"
    bar.Parent = sliderFrame
    bar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    bar.Position = UDim2.new(0, 0, 0.26, 0)
    bar.Size = UDim2.new(0, 281, 0, 25)

    local knob = Instance.new("ImageButton")
    knob.Name = "Knob"
    knob.Parent = bar
    knob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    knob.BackgroundTransparency = 1
    knob.Position = UDim2.new(0, 0, 0, 0)
    knob.Size = UDim2.new(0, 33, 0, 33)
    knob.Image = "rbxassetid://319860955"

    local minValue = params.Min or 1
    local maxValue = params.Max or 100
    local value = params.Value or minValue

    local valueLabel
    if params.Text then
        valueLabel = Instance.new("TextLabel")
        valueLabel.Parent = sliderFrame
        valueLabel.Position = UDim2.new(0.9, 0, 0, 0)
        valueLabel.Size = UDim2.new(0, 80, 0, 47)
        valueLabel.Text = tostring(value)
        valueLabel.Font = Enum.Font.SourceSans
        valueLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
        valueLabel.TextSize = 14
    end

    local function setValue(newValue)
        value = math.clamp(newValue, minValue, maxValue)
        local percent = (value - minValue) / (maxValue - minValue)
        knob.Position = UDim2.new(percent, 0, 0, 0)
        if valueLabel then valueLabel.Text = tostring(value) end
        if params.OnChange then params.OnChange(value) end
    end

    knob.MouseButton1Down:Connect(function()
        local mouse = game.Players.LocalPlayer:GetMouse()
        local conn
        conn = game:GetService("RunService").RenderStepped:Connect(function()
            local absPos = bar.AbsolutePosition.X
            local absSize = bar.AbsoluteSize.X
            local mouseX = math.clamp(mouse.X - absPos, 0, absSize)
            local newValue = minValue + ((mouseX / absSize) * (maxValue - minValue))
            setValue(math.floor(newValue))
        end)
        local inputConn
        inputConn = game:GetService("UserInputService").InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                if conn then conn:Disconnect() end
                if inputConn then inputConn:Disconnect() end
            end
        end)
    end)

    setValue(value)
    animateSlider(knob)
    tabWindow.CanvasSize = UDim2.new(0, 0, 0, sliderFrame.Position.Y.Offset + sliderFrame.Size.Y.Offset + 10)
    return sliderFrame
end

function Faldes_X.CreateText(tabWindow, params)
    params = params or {}
    local textLabel = Instance.new("TextLabel")
    textLabel.Name = params.Name or "TEXT"
    textLabel.Parent = tabWindow
    textLabel.BackgroundColor3 = Color3.fromRGB(76, 76, 76)
    textLabel.Position = getNextY(tabWindow, 45, 5)
    textLabel.Size = UDim2.new(0, 629, 0, 45)
    textLabel.Font = Enum.Font.SourceSansBold
    textLabel.Text = params.Text or "Faldes_X By Arts"
    textLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
    textLabel.TextSize = 25
    textLabel.TextXAlignment = Enum.TextXAlignment.Left

    tabWindow.CanvasSize = UDim2.new(0, 0, 0, textLabel.Position.Y.Offset + textLabel.Size.Y.Offset + 10)
    return textLabel
end

function Faldes_X.SetTheme(windowObj, themeName)
    if themes[themeName] then
        currentTheme = themes[themeName]
        applyTheme(windowObj, currentTheme)
    end
end

function Faldes_X.ShowNotification(windowObj, text)
    local gui = windowObj.Gui
    local notification = Instance.new("Frame")
    notification.Name = "notification"
    notification.Parent = gui
    notification.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    notification.Position = UDim2.new(0.5, -150, 0.1, 0)
    notification.Size = UDim2.new(0, 300, 0, 70)
    notification.BackgroundTransparency = 0.2
    notification.ZIndex = 100

    local nameNote = Instance.new("TextLabel")
    nameNote.Name = "NameNote"
    nameNote.Parent = notification
    nameNote.Text = "Уведомление"
    nameNote.Font = Enum.Font.SourceSansBold
    nameNote.TextSize = 18
    nameNote.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameNote.BackgroundTransparency = 1
    nameNote.Position = UDim2.new(0, 0, 0, 0)
    nameNote.Size = UDim2.new(1, 0, 0, 30)

    local textLabel = Instance.new("TextLabel")
    textLabel.Name = "Text"
    textLabel.Parent = notification
    textLabel.Text = text
    textLabel.Font = Enum.Font.SourceSans
    textLabel.TextSize = 16
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.BackgroundTransparency = 1
    textLabel.Position = UDim2.new(0, 0, 0.5, 0)
    textLabel.Size = UDim2.new(1, 0, 0.5, 0)

    TweenService:Create(notification, TweenInfo.new(0.5), {BackgroundTransparency = 0}):Play()
    task.wait(2)
    TweenService:Create(notification, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
    task.wait(0.5)
    notification:Destroy()
end

return Faldes_X

